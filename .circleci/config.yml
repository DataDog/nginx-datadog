---
version: 2.1
release_tag_only: &release_tag_only
  filters:
    tags:
      only: "/^v[0-9]+\\.[0-9]+\\.[0-9]+/"
    branches:
      ignore: "/.*/"

executors:
  docker-amd64:
    parameters:
      image:
        type: string
    docker:
    - image: "<< parameters.image >>"
    resource_class: xlarge
  docker-arm64:
    parameters:
      image:
        type: string
    docker:
    - image: "<< parameters.image >>"
    resource_class: arm.xlarge

jobs:
  build_amd64:
    parameters:
      nginx-version:
        type: string
      waf:
        type: enum
        enum:
        - 'ON'
        - 'OFF'
    steps:
    - checkout
    - run: git submodule sync && git submodule update --init --recursive
    - run:
        command: 'make build-musl'
        environment:
          BUILD_TYPE: RelWithDebInfo
          NGINX_VERSION: "<< parameters.nginx-version >>"
    - persist_to_workspace:
        root: "."
        paths:
          - ".musl-build/ngx_http_datadog_module.so"
          - ".musl-build/ngx_http_datadog_module.so.debug"
    - store_artifacts:
        path: ".musl-build/ngx_http_datadog_module.so"
        destination: ngx_http_datadog_module.so
    - store_artifacts:
        path: ".musl-build/ngx_http_datadog_module.so.debug"
        destination: ngx_http_datadog_module.so.debug
    machine:
      image: ubuntu-2204:current
    resource_class: xlarge
    environment:
      ARCH: x86_64
      MAKE_JOB_COUNT: 8
      WAF: "<< parameters.waf >>"
      NGINX_VERSION: "<< parameters.nginx-version >>"
  build_arm64:
    parameters:
      nginx-version:
        type: string
      waf:
        type: enum
        enum:
        - 'ON'
        - 'OFF'
    steps:
    - checkout
    - run: git submodule sync && git submodule update --init --recursive
    - run:
        command: 'make build-musl'
        environment:
          BUILD_TYPE: RelWithDebInfo
          NGINX_VERSION: "<< parameters.nginx-version >>"
    - persist_to_workspace:
        root: "."
        paths:
          - ".musl-build/ngx_http_datadog_module.so"
          - ".musl-build/ngx_http_datadog_module.so.debug"
    - store_artifacts:
        path: ".musl-build/ngx_http_datadog_module.so"
        destination: ngx_http_datadog_module.so
    - store_artifacts:
        path: ".musl-build/ngx_http_datadog_module.so.debug"
        destination: ngx_http_datadog_module.so.debug
    - store_artifacts:
        path: nginx-version-info
        destination: nginx-version-info
    machine:
      image: ubuntu-2204:current
    resource_class: arm.xlarge
    environment:
      ARCH: aarch64
      MAKE_JOB_COUNT: 8
      WAF: "<< parameters.waf >>"
      NGINX_VERSION: "<< parameters.nginx-version >>"
  test:
    parameters:
      base-image:
        type: string
        default: ''
      nginx-version:
        type: string
      arch:
        type: string
      waf:
        type: string
    executor:
      name: docker-<< parameters.arch >>
      image: cimg/python:3.10.13
    environment:
      DOCKER_BUILDKIT: 1
      WAF: "<< parameters.waf >>"
    steps:
    - checkout
    - attach_workspace:
        at: "/tmp/workspace"
    - run: mv -v /tmp/workspace/.musl-build/ngx_http_datadog_module.so* test/services/nginx/
    - run: printf "ARCH=%s\nBASE_IMAGE=%s\n" << parameters.arch >> << parameters.base-image >> > nginx-version-info
    - setup_remote_docker:
        docker_layer_caching: true
    - run: 'env | sort'
    - run: test/bin/run --verbose --failfast
    - store_artifacts:
        path: test/logs/test.log
        destination: test.log
  format:
    docker:
    - image: datadog/docker-library:dd-trace-cpp-ci
    resource_class: small
    steps:
    - checkout
    - run:
        name: Install Python dependencies
        command: |
          pip install yapf
          update-alternatives --install /usr/local/bin/yapf3 yapf3 /usr/local/bin/yapf 100
    - run: make lint
  shellcheck:
    docker:
    - image: koalaman/shellcheck-alpine:v0.9.0
      entrypoint: "/bin/sh"
    steps:
    - checkout
    - run: find bin/ test/ example/ -type f -executable | xargs shellcheck --exclude
        SC1071,SC1091,SC2317
workflows:
  build-and-test:
    jobs:
    - format
    - shellcheck:
        name: run shellcheck on shell scripts
        filters:
          tags:
            ignore: "/^v[0-9]+\\.[0-9]+\\.[0-9]+/"
    - build_amd64:
        matrix:
          parameters:
            nginx-version:
            - 1.22.1
            - 1.24.0
            - 1.25.4
            waf:
            - 'ON'
            - 'OFF'
        name: build << matrix.nginx-version >> on amd64 WAF << matrix.waf >>
        filters:
          tags:
            ignore: "/^v[0-9]+\\.[0-9]+\\.[0-9]+/"
    - build_arm64:
        matrix:
          parameters:
            nginx-version:
            - 1.22.1
            - 1.24.0
            - 1.25.4
            waf:
            - 'ON'
            - 'OFF'
        name: build << matrix.nginx-version >> on arm64 WAF << matrix.waf >>
        filters:
          tags:
            ignore: "/^v[0-9]+\\.[0-9]+\\.[0-9]+/"
    - test:
        matrix:
          parameters:
            arch:
            - amd64
            - arm64
            waf:
            - 'ON'
            - 'OFF'
            base-image:
            - nginx:1.25.4-alpine
            - nginx:1.25.4
            nginx-version:
            - 1.25.4
        name: test << matrix.nginx-version >> on << matrix.base-image >>:<< matrix.arch
          >> WAF << matrix.waf >>
        requires:
        - build << matrix.nginx-version >> on << matrix.arch >> WAF << matrix.waf
          >>
        filters:
          tags:
            ignore: "/^v[0-9]+\\.[0-9]+\\.[0-9]+/"
    - test:
        matrix:
          parameters:
            arch:
            - amd64
            - arm64
            waf:
            - 'ON'
            - 'OFF'
            base-image:
            - amazonlinux:2.0.20230418.0
            nginx-version:
            - 1.22.1
        name: test << matrix.nginx-version >> on << matrix.base-image >>:<< matrix.arch
          >> WAF << matrix.waf >>
        requires:
        - build << matrix.nginx-version >> on << matrix.arch >> WAF << matrix.waf
          >>
        filters:
          tags:
            ignore: "/^v[0-9]+\\.[0-9]+\\.[0-9]+/"
    - test:
        matrix:
          parameters:
            arch:
            - amd64
            - arm64
            waf:
            - 'ON'
            - 'OFF'
            base-image:
            - amazonlinux:2023.3.20240219.0
            nginx-version:
            - 1.24.0
        name: test << matrix.nginx-version >> on << matrix.base-image >>:<< matrix.arch >> WAF << matrix.waf >>
        requires:
        - build << matrix.nginx-version >> on << matrix.arch >> WAF << matrix.waf >>
        filters:
          tags:
            ignore: "/^v[0-9]+\\.[0-9]+\\.[0-9]+/"
  build-and-test-all:
    jobs:
    # output of bin/generate_jobs.rb
    - build_amd64:
        <<: *release_tag_only
        matrix:
          parameters:
            nginx-version:
            - 1.22.0
            - 1.22.1
            - 1.23.0
            - 1.23.1
            - 1.23.2
            - 1.23.3
            - 1.23.4
            - 1.24.0
            - 1.25.0
            - 1.25.1
            - 1.25.2
            - 1.25.3
            - 1.25.4
            waf:
            - 'ON'
            - 'OFF'
        name: build << matrix.nginx-version >> on amd64 WAF << matrix.waf >>
    - build_arm64:
        <<: *release_tag_only
        matrix:
          parameters:
            nginx-version:
            - 1.22.0
            - 1.22.1
            - 1.23.0
            - 1.23.1
            - 1.23.2
            - 1.23.3
            - 1.23.4
            - 1.24.0
            - 1.25.0
            - 1.25.1
            - 1.25.2
            - 1.25.3
            - 1.25.4
            waf:
            - 'ON'
            - 'OFF'
        name: build << matrix.nginx-version >> on arm64 WAF << matrix.waf >>
    - test:
        <<: *release_tag_only
        matrix:
          parameters:
            arch:
            - amd64
            - arm64
            waf:
            - 'ON'
            - 'OFF'
            base-image:
            - amazonlinux:2023.3.20240219.0
            - nginx:1.24.0-alpine
            - nginx:1.24.0
            nginx-version:
            - 1.24.0
        name: test << matrix.nginx-version >> on << matrix.base-image >>:<< matrix.arch >> WAF << matrix.waf >>
        requires:
        - build << matrix.nginx-version >> on << matrix.arch >> WAF << matrix.waf >>
    - test:
        <<: *release_tag_only
        matrix:
          parameters:
            arch:
            - amd64
            - arm64
            waf:
            - 'ON'
            - 'OFF'
            base-image:
            - amazonlinux:2.0.20230418.0
            - amazonlinux:2.0.20230320.0
            - amazonlinux:2.0.20230307.0
            - amazonlinux:2.0.20230221.0
            - amazonlinux:2.0.20230207.0
            - amazonlinux:2.0.20230119.1
            - amazonlinux:2.0.20221210.0
            - amazonlinux:2.0.20221103.3
            - amazonlinux:2.0.20221004.0
            - amazonlinux:2.0.20220912.1
            - amazonlinux:2.0.20220805.0
            - amazonlinux:2.0.20220719.0
            - amazonlinux:2.0.20220606.1
            - amazonlinux:2.0.20220426.0
            - amazonlinux:2.0.20220419.0
            - amazonlinux:2.0.20220406.1
            - amazonlinux:2.0.20220316.0
            - amazonlinux:2.0.20220218.1
            - amazonlinux:2.0.20220121.0
            - nginx:1.22.1-alpine
            - nginx:1.22.1
            nginx-version:
            - 1.22.1
        name: test << matrix.nginx-version >> on << matrix.base-image >>:<< matrix.arch >> WAF << matrix.waf >>
        requires:
        - build << matrix.nginx-version >> on << matrix.arch >> WAF << matrix.waf >>
    - test:
        <<: *release_tag_only
        matrix:
          parameters:
            arch:
            - amd64
            - arm64
            waf:
            - 'ON'
            - 'OFF'
            base-image:
            - nginx:1.25.4-alpine
            - nginx:1.25.4
            nginx-version:
            - 1.25.4
        name: test << matrix.nginx-version >> on << matrix.base-image >>:<< matrix.arch >> WAF << matrix.waf >>
        requires:
        - build << matrix.nginx-version >> on << matrix.arch >> WAF << matrix.waf >>
    - test:
        <<: *release_tag_only
        matrix:
          parameters:
            arch:
            - amd64
            - arm64
            waf:
            - 'ON'
            - 'OFF'
            base-image:
            - nginx:1.25.3-alpine
            - nginx:1.25.3
            nginx-version:
            - 1.25.3
        name: test << matrix.nginx-version >> on << matrix.base-image >>:<< matrix.arch >> WAF << matrix.waf >>
        requires:
        - build << matrix.nginx-version >> on << matrix.arch >> WAF << matrix.waf >>
    - test:
        <<: *release_tag_only
        matrix:
          parameters:
            arch:
            - amd64
            - arm64
            waf:
            - 'ON'
            - 'OFF'
            base-image:
            - nginx:1.25.2-alpine
            - nginx:1.25.2
            nginx-version:
            - 1.25.2
        name: test << matrix.nginx-version >> on << matrix.base-image >>:<< matrix.arch >> WAF << matrix.waf >>
        requires:
        - build << matrix.nginx-version >> on << matrix.arch >> WAF << matrix.waf >>
    - test:
        <<: *release_tag_only
        matrix:
          parameters:
            arch:
            - amd64
            - arm64
            waf:
            - 'ON'
            - 'OFF'
            base-image:
            - nginx:1.25.1-alpine
            - nginx:1.25.1
            nginx-version:
            - 1.25.1
        name: test << matrix.nginx-version >> on << matrix.base-image >>:<< matrix.arch >> WAF << matrix.waf >>
        requires:
        - build << matrix.nginx-version >> on << matrix.arch >> WAF << matrix.waf >>
    - test:
        <<: *release_tag_only
        matrix:
          parameters:
            arch:
            - amd64
            - arm64
            waf:
            - 'ON'
            - 'OFF'
            base-image:
            - nginx:1.25.0-alpine
            - nginx:1.25.0
            nginx-version:
            - 1.25.0
        name: test << matrix.nginx-version >> on << matrix.base-image >>:<< matrix.arch >> WAF << matrix.waf >>
        requires:
        - build << matrix.nginx-version >> on << matrix.arch >> WAF << matrix.waf >>
    - test:
        <<: *release_tag_only
        matrix:
          parameters:
            arch:
            - amd64
            - arm64
            waf:
            - 'ON'
            - 'OFF'
            base-image:
            - nginx:1.23.4-alpine
            - nginx:1.23.4
            nginx-version:
            - 1.23.4
        name: test << matrix.nginx-version >> on << matrix.base-image >>:<< matrix.arch >> WAF << matrix.waf >>
        requires:
        - build << matrix.nginx-version >> on << matrix.arch >> WAF << matrix.waf >>
    - test:
        <<: *release_tag_only
        matrix:
          parameters:
            arch:
            - amd64
            - arm64
            waf:
            - 'ON'
            - 'OFF'
            base-image:
            - nginx:1.23.3-alpine
            - nginx:1.23.3
            nginx-version:
            - 1.23.3
        name: test << matrix.nginx-version >> on << matrix.base-image >>:<< matrix.arch >> WAF << matrix.waf >>
        requires:
        - build << matrix.nginx-version >> on << matrix.arch >> WAF << matrix.waf >>
    - test:
        <<: *release_tag_only
        matrix:
          parameters:
            arch:
            - amd64
            - arm64
            waf:
            - 'ON'
            - 'OFF'
            base-image:
            - nginx:1.23.2-alpine
            - nginx:1.23.2
            nginx-version:
            - 1.23.2
        name: test << matrix.nginx-version >> on << matrix.base-image >>:<< matrix.arch >> WAF << matrix.waf >>
        requires:
        - build << matrix.nginx-version >> on << matrix.arch >> WAF << matrix.waf >>
    - test:
        <<: *release_tag_only
        matrix:
          parameters:
            arch:
            - amd64
            - arm64
            waf:
            - 'ON'
            - 'OFF'
            base-image:
            - nginx:1.23.1-alpine
            - nginx:1.23.1
            nginx-version:
            - 1.23.1
        name: test << matrix.nginx-version >> on << matrix.base-image >>:<< matrix.arch >> WAF << matrix.waf >>
        requires:
        - build << matrix.nginx-version >> on << matrix.arch >> WAF << matrix.waf >>
    - test:
        <<: *release_tag_only
        matrix:
          parameters:
            arch:
            - amd64
            - arm64
            waf:
            - 'ON'
            - 'OFF'
            base-image:
            - nginx:1.23.0-alpine
            - nginx:1.23.0
            nginx-version:
            - 1.23.0
        name: test << matrix.nginx-version >> on << matrix.base-image >>:<< matrix.arch >> WAF << matrix.waf >>
        requires:
        - build << matrix.nginx-version >> on << matrix.arch >> WAF << matrix.waf >>
    - test:
        <<: *release_tag_only
        matrix:
          parameters:
            arch:
            - amd64
            - arm64
            waf:
            - 'ON'
            - 'OFF'
            base-image:
            - nginx:1.22.0-alpine
            - nginx:1.22.0
            nginx-version:
            - 1.22.0
        name: test << matrix.nginx-version >> on << matrix.base-image >>:<< matrix.arch >> WAF << matrix.waf >>
        requires:
        - build << matrix.nginx-version >> on << matrix.arch >> WAF << matrix.waf >>
