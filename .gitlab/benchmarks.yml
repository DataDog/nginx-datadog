stages:
  - build
  - run-benchmarks
  - gate
  - notify

include:
 project: 'DataDog/benchmarking-platform-tools'
 file: 'images/templates/gitlab/notify-slo-breaches.template.yml'

variables:
  MACROBENCHMARKS_CI_IMAGE: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/benchmarking-platform:cpp-nginx
  BUILD_IMAGE: 486234852809.dkr.ecr.us-east-1.amazonaws.com/images/mirror/b1o7r7e0/nginx_musl_toolchain
  NGINX_VERSION: 1.26.0

build-nginx-module:
  stage: build
  tags: ["arch:amd64"]
  timeout: 20min
  image: $BUILD_IMAGE
  variables:
    WAF: OFF
    COVERAGE: OFF
    RUM: OFF
    BUILD_TYPE: Release
    ARCH: x86_64
  script:
    - git submodule sync && git submodule update --init --recursive
    - export NGINX_SRC_DIR="$PWD/nginx"
    - make build-musl-aux
  artifacts:
    name: "artifacts"
    when: always
    paths:
      - platform/artifacts/
    expire_in: 3 months


.benchmarks:
  stage: run-benchmarks
  needs: ["build-nginx-module"]
  tags: ["runner:apm-k8s-same-cpu"]
  timeout: 1h
  image: $MACROBENCHMARKS_CI_IMAGE
  script:
    - git clone --branch cpp/nginx https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.ddbuild.io/DataDog/benchmarking-platform platform && cd platform
    - bp-runner bp-runner.yml --debug
  artifacts:
    name: "artifacts"
    when: always
    paths:
      - platform/artifacts/
    expire_in: 3 months
  variables:
    # Benchmark's env variables. Modify to tweak benchmark parameters.
    DD_TRACE_DEBUG: "false"
    DD_RUNTIME_METRICS_ENABLED: "true"

    DD_BENCHMARKS_NGINX_IMAGE_TAG: amd64-${NGINX_VERSION}

    K6_OPTIONS_NORMAL_OPERATION_RATE: 1000
    K6_OPTIONS_NORMAL_OPERATION_DURATION: 5m
    K6_OPTIONS_NORMAL_OPERATION_GRACEFUL_STOP: 10s
    K6_OPTIONS_NORMAL_OPERATION_PRE_ALLOCATED_VUS: 4
    K6_OPTIONS_NORMAL_OPERATION_MAX_VUS: 4

    K6_OPTIONS_HIGH_LOAD_RATE: 5000
    K6_OPTIONS_HIGH_LOAD_DURATION: 2m
    K6_OPTIONS_HIGH_LOAD_GRACEFUL_STOP: 10s
    K6_OPTIONS_HIGH_LOAD_PRE_ALLOCATED_VUS: 4
    K6_OPTIONS_HIGH_LOAD_MAX_VUS: 4

  # Workaround: Currently we're not running the benchmarks on every PR, but GitHub still shows them as pending.
  # By marking the benchmarks as allow_failure, the Github checks are not displayed.
  allow_failure: true

baseline:
  extends: .benchmarks
  variables:
    DD_BENCHMARKS_CONFIGURATION: baseline

only-tracing:
  extends: .benchmarks
  variables:
    DD_BENCHMARKS_CONFIGURATION: only-tracing

check-slo-breaches:
  stage: gate
  when: always
  tags: ["arch:amd64"]
  image: $MACROBENCHMARKS_CI_IMAGE
  artifacts:
    name: "artifacts"
    when: always
    paths:
      - platform/artifacts/
    expire_in: 3 months
  script:
    - cd platform && (git init && git remote add origin https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.ddbuild.io/DataDog/benchmarking-platform && git pull origin cpp/nginx)
    - bp-runner bp-runner.fail-on-breach.yml

notify-slo-breaches:
  extends: .notify-slo-breaches
  stage: notify
  needs: ["check-slo-breaches"]
  when: always
  variables:
    CHANNEL: "apm-proxy"

