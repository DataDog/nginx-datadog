# This is the module that was installed by `install_datadog.sh`.
load_module modules/ngx_http_datadog_module.so;

events {
    worker_connections  1024;
}

http {
    # The default access log format includes the trace ID and the span ID.
    access_log /dev/stdout;

    datadog_service_name "nginx-datadog-example";

    server {
        listen 80;

        location /http {
            # Add a custom tag.  Tag values can contain nginx variables.
            datadog_tag special.tag "The URI is $uri";
            proxy_pass http://http:8080;
        }

        location /http-with-location {
            # Create a span for this location in addition to the span for the
            # request.
            datadog_trace_locations on;
            # This tag will be on the location-specific span.
            datadog_tag special.tag "The URI is $uri";
            # The resource name is customizable for both the request span and
            # the location span.
            datadog_resource_name "request URI $uri";
            datadog_location_resource_name "location URI $uri";
            proxy_pass http://http:8080;
        }

        location /http-no-trace {
            # Don't trace these requests.
            datadog_disable;
            proxy_pass http://http:8080;
        }

        location /fastcgi {
            fastcgi_pass fastcgi:8080;
        }

        location /uwsgi {
            include uwsgi_params;
            uwsgi_pass uwsgi:8080;
        }
    }

    server {
        # gRPC runs on HTTP/2, and nginx doesn't allow a server to host both
        # HTTP/1.1 and HTTP/2, so here is a server dedicated to gRPC.
        listen 1337 http2;

        location / {
            grpc_pass grpc://grpc:1337;
        }
    }
}
