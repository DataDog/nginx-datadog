# This is the module that was installed by `install_datadog.sh`.
load_module modules/ngx_http_datadog_module.so;

events {
    worker_connections  1024;
}

http {
    # The default access log format includes the trace ID and the span ID.
    log_format datadog_text '$remote_addr - $http_x_forwarded_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for" "$datadog_trace_id" "$datadog_span_id"';
    log_format datadog_json escape=json '{"remote_addr": "$remote_addr", "forwarded_user": "$http_x_forwarded_user", "time_local": "$time_local", "request": "$request", "status": $status, "body_bytes_sent": $body_bytes_sent, "referer": "$http_referer", "user_agent": "$http_user_agent", "forwarded_for": "$http_x_forwarded_for", "dd.trace_id": "$datadog_trace_id", "dd.span_id": "$datadog_span_id"}';

    access_log /dev/stdout datadog_text;

    datadog_service_name "openresty-datadog-example";

    server {
        listen 80;

        location /openresty {
            default_type text/plain;
            datadog_tag special.tag "The URI is $uri";
            content_by_lua_block {
                ngx.say("openresty lua generated content")
            }
        }

        location /openresty-with-location {
            # Create a span for this location in addition to the span for the
            # request.
            datadog_trace_locations on;
            # This tag will be on the location-specific span.
            datadog_tag special.tag "The URI is $uri";
            # The resource name is customizable for both the request span and
            # the location span.
            datadog_resource_name "request URI $uri";
            datadog_location_resource_name "location URI $uri";
            content_by_lua_block {
                ngx.say("openresty lua generated content")
            }
        }

        location /openresty-no-trace {
            # Don't trace these requests.
            datadog_tracing off;
            content_by_lua_block {
                ngx.say("openresty lua generated content")
            }
        }
    }
}
