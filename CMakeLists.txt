cmake_minimum_required(VERSION 3.7)

# This build configuration combines the following other build configurations:
# - `nginx-datadog.cmake`, the actual nginx module source in `src/`,
# - `nginx-module.cmake`, the nginx-specific boilerplate code generated by
#   nginx's `configure` script,
# - `dd-trace-cpp/CMakeLists.txt`, the Datadog tracing library.

project(ngx_http_datadog_module)

# Prefer the build mode "release with debug info" if another mode wasn't
# specified.
if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
  set(CMAKE_BUILD_TYPE "RelWithDebInfo")
endif()

# The C code doesn't care about the C++ version.
# dd-trace-cpp works with C++17 or newer.
set(CMAKE_CXX_STANDARD 17)

# This warning has a false positive. See
# <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=108088>.
add_compile_options(-Wno-error=free-nonheap-object)

# Nginx module boilerplate (code within the nginx repository)
include(./nginx-module.cmake)

# The actual source code of this repo
include(./nginx-datadog.cmake)

add_subdirectory(./dd-trace-cpp EXCLUDE_FROM_ALL)

# The shared library (nginx module) that we are building.
add_library(ngx_http_datadog_module SHARED)
target_sources(ngx_http_datadog_module
    PRIVATE
        $<TARGET_OBJECTS:nginx_module>
        $<TARGET_OBJECTS:nginx_datadog>
        $<TARGET_OBJECTS:dd_trace_cpp-objects>
)

add_dependencies(ngx_http_datadog_module
    nginx_module
    nginx_datadog
    dd_trace_cpp-objects
)

target_link_libraries(ngx_http_datadog_module dd_trace_cpp-objects -static-libstdc++ -static-libgcc)
