daemon off;
# Heroku dynos have at least 4 cores.
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
  use epoll;
  accept_mutex on;
  worker_connections 1024;
}

http {
  gzip on;
  gzip_http_version  1.0;
  gzip_comp_level 5;
  gzip_min_length 256;
  gzip_proxied any;
  gzip_vary on;
  gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/rss+xml
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/svg+xml
    image/x-icon
    text/css
    text/plain
    text/x-component;

  server_tokens off;

  proxy_cache_path /tmp/nginx levels=1:2 keys_zone=app:8m max_size=1000m inactive=600m use_temp_path=off;
  proxy_temp_path /tmp/nginx_temp;

  log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
  access_log logs/nginx/access.log;
  error_log logs/nginx/error.log;

  include mime.types;
  default_type application/octet-stream;
  sendfile on;

  #Must read the body in 5 seconds.
  client_body_timeout <%= ENV['NGINX_CLIENT_BODY_TIMEOUT'] || 5 %>;
  client_header_timeout <%= ENV['NGINX_CLIENT_HEADER_TIMEOUT'] || 5 %>;

  upstream app_server {
    server unix:/tmp/nginx.socket fail_timeout=0;
  }

  server {
    listen <%= ENV["PORT"] %>;
    server_name _;
    keepalive_timeout 5;
    client_max_body_size <%= ENV['NGINX_CLIENT_MAX_BODY_SIZE'] || 1 %>M;

    root /app/public;

    location ~* ^/(assets|packs)/ {
      gzip_static on;

      add_header Access-Control-Allow-Origin *;
      add_header Cache-Control public;
      expires max;

      # Some browsers still send conditional-GET requests if there's a
      # Last-Modified header or an ETag header even if they haven't
      # reached the expiry date sent in the Expires header.
      add_header Last-Modified "";
      add_header ETag "";
      break;
    }

    location / {
      proxy_http_version 1.1;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
      proxy_redirect off;

      add_header X-Proxy-Cache $upstream_cache_status;
      proxy_cache_lock on;
      proxy_cache_lock_age 1s;
      proxy_cache_revalidate on;
      proxy_cache_key "$scheme$request_method$host$request_uri";
      proxy_cache app;

      proxy_pass http://app_server;
    }
  }
}
